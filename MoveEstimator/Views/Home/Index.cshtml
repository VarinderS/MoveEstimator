@model MoveEstimator.Models.HomeViewModel

<h2>Estimates</h2>

@TempData["AlreadyExsists"]

@{ 
	var searchViewModel = Model.searchViewModel;
	var estimateList = Model.EstimateViewModelList;
	var singleEstimate = Model.EstimateViewModelList.FirstOrDefault();
	var addEstimate = Model.AddEstimate;
}

@Html.Partial("_estimateSearchForm", searchViewModel)
<hr />

<table class="main-view">
	<thead>
		<tr>
			<th>@Html.DisplayNameFor( model => singleEstimate.FromLocationName )</th>
			<th>@Html.DisplayNameFor( model => singleEstimate.ToLocationName )</th>
			<th>@Html.DisplayNameFor( model => singleEstimate.SmallMove )</th>
			<th>@Html.DisplayNameFor( model => singleEstimate.MediumMove )</th>
			<th>@Html.DisplayNameFor( model => singleEstimate.LargeMove )</th>
			<th>Actions</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var estimateViewModel in Model.EstimateViewModelList)
		{
			using (Html.BeginForm("Update", "Home"))
			{
				<tr>
					<td>@Html.DisplayFor( model => estimateViewModel.FromLocationName )</td>
					<td>@Html.DisplayFor( model => estimateViewModel.ToLocationName )</td>
					<td>@Html.DisplayFor( model => estimateViewModel.SmallMove )</td>
					<td>@Html.DisplayFor( model => estimateViewModel.MediumMove )</td>
					<td>@Html.DisplayFor( model => estimateViewModel.LargeMove )</td>
					<td>@Html.ActionLink("Edit", "Update", new { id = estimateViewModel.EstimateId }) @Html.ActionLink("Delete", "Delete", new { id = estimateViewModel.EstimateId })</td>
				</tr>
			
				<tr class="update-row">
					<td>@Html.DropDownListFor( model => estimateViewModel.FromLocationId, new SelectList( Model.Locations, "Id", "Name", estimateViewModel.FromLocationId ), new { Id="" } )</td>
					<td>@Html.DropDownListFor( model => estimateViewModel.ToLocationId, new SelectList( Model.Locations, "Id", "Name", estimateViewModel.ToLocationId ), new { Id="" } )</td>
					<td>@Html.TextBoxFor( model => estimateViewModel.SmallMove, new { Id="" } )</td>
					<td>@Html.TextBoxFor( model => estimateViewModel.MediumMove, new { Id="" } )</td>
					<td>@Html.TextBoxFor( model => estimateViewModel.LargeMove, new { Id="" } )</td>
					<td>@Html.HiddenFor( model => estimateViewModel.EstimateId, new { Id="" } )<input type="submit" value="update" /></td>
				</tr>
			}
		}
	</tbody>
</table>

<hr />

@using ( Html.BeginForm( "Create", "Home", FormMethod.Post ) )
{
	<table>
		<tr>
			<td>@Html.DropDownListFor( model => model.AddEstimate.FromLocationId, new SelectList( Model.Locations, "Id", "Name", Model.AddEstimate.FromLocationId ), "From Location" )</td>
			<td>@Html.DropDownListFor( model => model.AddEstimate.ToLocationId, new SelectList( Model.Locations, "Id", "Name", Model.AddEstimate.ToLocationId ), "To Location" )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.SmallMove )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.MediumMove )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.LargeMove )</td>
			<td><input type="submit" value="Add" /></td>
		</tr>
	</table>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}