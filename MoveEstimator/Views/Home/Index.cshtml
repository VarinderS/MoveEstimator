@model MoveEstimator.Models.HomeViewModel

<h2>Estimates</h2>

@TempData["AlreadyExsists"]

@{ 
	var searchViewModel = Model.searchViewModel;
	var estimateList = Model.EstimateViewModelList;
	var singleEstimate = Model.EstimateViewModelList.FirstOrDefault();
	var addEstimate = Model.AddEstimate;
}

@Html.Partial("_estimateSearchForm", searchViewModel)
<hr />

<div class="main-view table">
	<div class="main-view-header row">
		<div class="cell">
			@Html.DisplayNameFor( model => singleEstimate.FromLocationName )
		</div>
		<div class="cell">
			@Html.DisplayNameFor( model => singleEstimate.ToLocationName )
		</div>
		<div class="cell">
			@Html.DisplayNameFor( model => singleEstimate.SmallMove )
		</div>
		<div class="cell">
			@Html.DisplayNameFor( model => singleEstimate.MediumMove )
		</div>
		<div class="cell">
			@Html.DisplayNameFor( model => singleEstimate.LargeMove )
		</div>
		<div class="cell">
			Actions
		</div>
	</div>

	@foreach (var estimateViewModel in Model.EstimateViewModelList)
	{
		<div class="row"> 
			<div class="cell">
				@Html.DisplayFor( model => estimateViewModel.FromLocationName )
			</div>
			<div class="cell">
				@Html.DisplayFor( model => estimateViewModel.ToLocationName )
			</div>
			<div class="cell">
				@Html.DisplayFor( model => estimateViewModel.SmallMove )
			</div>
			<div class="cell">
				@Html.DisplayFor( model => estimateViewModel.MediumMove )
			</div>
			<div class="cell">
				@Html.DisplayFor( model => estimateViewModel.LargeMove )
			</div>
			<div class="cell">
				<a href="#" class="update">Update</a> | <a href="@Url.Action("Delete", "Home", new { id = estimateViewModel.EstimateId })">Delete</a>
			</div>
		</div>
		using (Html.BeginForm("Update", "Home", FormMethod.Post, new { @class="row" }))
		{
			<div class="cell">
				@Html.DropDownListFor(model => estimateViewModel.FromLocationId, new SelectList( Model.Locations, "Id", "Name", estimateViewModel.FromLocationId))
			</div>
			<div class="cell">
				@Html.DropDownListFor(model => estimateViewModel.ToLocationId, new SelectList( Model.Locations, "Id", "Name", estimateViewModel.ToLocationId ))
			</div>
			<div class="cell">
				@Html.EditorFor(model => estimateViewModel.SmallMove)
			</div>
			<div class="cell">
				@Html.EditorFor(model => estimateViewModel.MediumMove)
			</div>
			<div class="cell">
				@Html.EditorFor(model => estimateViewModel.LargeMove)
			</div>
			<div class="cell">
				@Html.HiddenFor(model => estimateViewModel.EstimateId)
				<input type="submit" value="update" />
			</div>
		}
	}
</div>

<hr />

@using ( Html.BeginForm( "Create", "Home", FormMethod.Post ) )
{
	<table>
		<tr>
			<td>@Html.DropDownListFor( model => model.AddEstimate.FromLocationId, new SelectList( Model.Locations, "Id", "Name", Model.AddEstimate.FromLocationId ), "From Location" )</td>
			<td>@Html.DropDownListFor( model => model.AddEstimate.ToLocationId, new SelectList( Model.Locations, "Id", "Name", Model.AddEstimate.ToLocationId ), "To Location" )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.SmallMove )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.MediumMove )</td>
			<td>@Html.EditorFor( model => model.AddEstimate.LargeMove )</td>
			<td><input type="submit" value="Add" /></td>
		</tr>
	</table>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}